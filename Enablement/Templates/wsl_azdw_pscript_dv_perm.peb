{# -- TemplateVersion:002 MinVersion:8010 MaxVersion:* TargetType:AzureDW Objects:DATAVAULT TemplateType:Powershell64                                       -- #}
{# --                                                                                                                                                       -- #}
{# --    (c) WhereScape Inc 2020. WhereScape Inc permits you to copy this Template solely for use with the RED software, and to modify this Template        -- #}
{# --    for the purposes of using that modified Template with the RED software, but does not permit copying or modification for any other purpose.         -- #}
{# --                                                                                                                                                       -- #}
{# -- =============================================================================                                                                         -- #}
{# --                                                                                                                                                       -- #}
{# -- DBMS Name          : Azure SQL DW                                                                                                                     -- #}
{# -- Template Name      : wsl_azdw_pscript_dv_perm                                                                                                         -- #}
{# -- Template Version   : 8.0.1.0                                                                                                                          -- #}
{# -- Description        : This template creates a Azure SQL DW procedure using Insert                                                                      -- #}
{# --                      specifically designed for RED data vault permanent tables                                                                        -- #}
{# --                                                                                                                                                       -- #}
{# -- =============================================================================                                                                         -- #}
{# --                                                                                                                                                       -- #}
{# --                                                                                                                                                       -- #}
{# -- Notes / History                                                                                                                                       -- #}
{# -- TK: Azure SQL DW Release 1.0.0 (2017-08-03)                                                                                                           -- #}
{# --                                                                                                                                                       -- #}
{# --                                                                                                                                                       -- #}
{% import "wsl_azdw_utility_dv" %}
{# --                                                            Start of main procedure text                                                               -- #}
#--=============================================================================={%br%}
#-- DBMS Name        :    Azure SQL DW {{table.dbType.name}}{%br%}
#-- Procedure Name   :    {{settings.procedureName}}{%br%}
#-- Template         :    {{settings.template.name}}{%br%}
#-- Template Version :    8.0.1.0{%br%}
#-- Description      :    Update the {{table.objectType.name}} table {{table.name}}{%br%}
#-- Generated by     :    {{env.productVersion}}{%br%}
#-- Generated for    :    {{env.licensedTo}}{%br%}
#-- Generated on     :    {{env.currentTimestamp}}{%br%}
#-- Author           :    {{env.userName}}{%br%}
#--=============================================================================={%br%}
#-- Notes / History{%br%}
#--{%br%}

Import-module -Name WslPowershellCommon -DisableNameChecking{%br%}
Import-module -Name WslPowershellAzureDW -DisableNameChecking{%br%}
$tgtConn = New-Object System.Data.Odbc.OdbcConnection{%br%}
Hide-Window{%br%}

#--============================================================================{%br%}
#-- General Variables{%br%}
#--============================================================================{%br%}{%br%}
$sequence = ${env:WSL_SEQUENCE}{%br%}
$jobName = ${env:WSL_JOB_NAME}{%br%}
$taskName = ${env:WSL_TASK_NAME}{%br%}
$jobId = ${env:WSL_JOB_KEY}{%br%}
$taskId = ${env:WSL_TASK_KEY}{%br%}
$return_Msg = "{{table.name}} updated."{%br%}
$status = 1{%br%}

{%- set isSatelliteMultiActiveSequence = false -%}
{%- if table.objectType == Types.ObjectType.Satellite %}
{%- from table.columns as multiActiveSeqColumn where multiActiveSeqColumn.keyType.name == "MultiActiveSequence" and multiActiveSeqColumn.sourceTable is empty -%}
{%- set isSatelliteMultiActiveSequence = true -%}
{%- endfrom -%}
{%- endif %}
#--============================================================================{%br%}
#-- Main{%br%}
#--============================================================================{%br%}{%br%}
$step = {% counter %}00{%br%}
$insertCount = 0{%br%}

{%- for par in settings.parameters %}
  {%- if loop.first %}
{%br%}
#--============================================================================{%br%}
#-- Set Parameter Variables{%br%}
#--============================================================================{%br%}{%br%}
$step = {% counter %}00{%br%}{%br%}
  {%- endif %}
${{par}} = (WsParameterRead "{{par}}")[0]{%br%}
{%- endfor %}

if ( $status -eq 1 ){
{%br%}
  #--============================================================================{%br%}
  #-- Insert new records{%br%}
  #--============================================================================{%br%}{%br%}
  $step = {% counter %}00{%br%}{%br%}
    $sql = @"
    INSERT INTO [TABLEOWNER].[{{table.name}}]{%br%}
    {{- addSetInsertTargetColumns(indentString = " ")}}
    {%- if isSatelliteMultiActiveSequence -%}{%br%}
    SELECT {{addSetInsertColumnsMultiActiveSequenceSatellite()}}
    FROM (
    {%- endif -%}{%br%}
    SELECT {{distinct()}}
    {%- if isSatelliteMultiActiveSequence -%}{%br%}
    {{addSetInsertColumnsIncomingRowsMultiActiveSequenceSatellite()}}{%br%}
    {%- else -%}
    {{addSetInsertColumnsPerm(indentString = " ")}}
    {%- endif -%}
    {%- if settings.sourceJoinDetails.join | trim != "" %}
    {{settings.sourceJoinDetails.join}}
    {%- endif %}{%br%}
    {%- if isSatelliteMultiActiveSequence -%}
    {%- if settings.sourceJoinDetails.where | trim != "" %}
    {{settings.sourceJoinDetails.where | trim }}{%br%}
    {%- endif %}
    ) AS incoming_rows{%br%}
    {%- endif -%}
    {%- if table.objectType == Types.ObjectType.Satellite and isSatelliteMultiActiveSequence %}
    {{addSatMultiActiveSequenceCurrentVersion()}}
    {%- elseif table.objectType == Types.ObjectType.Satellite %}
    {{addSatCurrentVersion()}}
    {%- endif %}
    {%- if not isSatelliteMultiActiveSequence -%}
    {%- if settings.sourceJoinDetails.where | trim != "" %}
    {{settings.sourceJoinDetails.where | trim }}{%br%}
    {%- endif %}
    {%- endif %}
    {%- if table.objectType == Types.ObjectType.Hub %}
    {{addHubWhereNotExists()}}
    {%- elseif table.objectType == Types.ObjectType.Link %}
    {{addLinkWhereNotExists()}}
    {%- elseif table.objectType == Types.ObjectType.Satellite and isSatelliteMultiActiveSequence %}
    {{addMultiActiveSequenceSatWhereNotExists()}}
    {%- elseif table.objectType == Types.ObjectType.Satellite %}
    {{addSatWhereNotExists()}}
    {%- endif %}
    {%- if settings.sourceJoinDetails.groupBy | trim != "" %}
    {{settings.sourceJoinDetails.groupBy | trim }}{%br%}
    {%- endif %}
    ;{%br%}{%br%}
"@
  $AzureDWResult = Run-AzureDW-RedSQL -sql $sql -dsn ${env:WSL_TGT_DSN} -uid ${env:WSL_TGT_USER} -pwd ${env:WSL_TGT_PWD} -failureMsg "Failed inserting into table {{table.name}} step $step" -odbcConn $tgtConn
  $insertCount = $AzureDWResult[1]
  $return_Msg = $AzureDWResult[2]{%br%}
}{%br%}

#--====================================================={%br%}
#-- All Done report the results{%br%}
#--====================================================={%br%}{%br%}
$step = {% counter %}00{%br%}{%br%}
#-- WsWrkTask call to updated row counts in Ws_Wrk_Task_Run/Log{%br%}
if ( $insertCount -eq $null ) {
  $insertCount = 0
}{%br%}
$metaResult = WsWrkTask -Inserted $insertCount{%br%}
if ( $metaResult -lt -1 ){
  $status = -2{%br%}
  $return_Msg = "Failure executing WsWrkTask. $insertCount records inserted."{%br%}
}

#-- Work out return message{%br%}
if ( $status -eq 1 ) {
{%br%}
  $return_Msg = "{{table.name}} updated.  "{%br%}
  $return_Msg += "$insertCount records inserted."{%br%}
}

$status
$return_Msg

$tgtConn.Dispose()
